{"version":3,"sources":["Store/actionNames.ts","Components/VirtualizedTable/VirtualizedTableAction.ts","Components/VirtualizedTable/VirtualizedTableProps.ts","Components/VirtualizedTable/VirtualizedTableReducer.ts","shared/utils.ts","inversify/inversifyTypes.ts","inversify/inverisfyContainer.ts","Components/InputField.tsx","Components/SearchButton.tsx","Components/SortButton.tsx","Components/VirtualizedTable/VirtualizedTable.tsx","Components/VirtualizedTable/VirtualizedTableContainer.tsx","App.tsx","Store/reducers.ts","Store/sagas.ts","Store/index.ts","index.tsx"],"names":["SORT_DIRECTION_CHANGED","FILTER_NAME_CHANGED","FILTER_VALUE_CHANGED","GET_LIST","SET_HEADERS","VirtualizedTableAction","injectable","getList","type","payload","setHeaders","headers","sortDirectionChanged","sortField","sortDirection","filterNameChanged","filterName","filterValueChanged","filterValue","VirtualizedTablePropsInitial","undefined","sortBy","sortDir","data","originalData","VirtualizedTableReducer","getReducer","state","action","reduce","this","setHeader","count","newState","list","Array","keys","map","el","i","id","data1","data2","data3","data4","filter","match","RegExp","e","console","log","sortableData","sort","a","b","parsedA","Number","parseInt","parsedB","isNaN","localeCompare","reverse","SERVICE_IDENTIFIER","Symbol","for","container","Container","bind","to","inSingletonScope","InputField","props","Input","style","marginLeft","onChange","IconButton","onClick","onClose","SearchButton","SortButton","color","selected","direction","VirtualizedTable","useState","hoveredRowIndex","setHoveredRowIndex","actions","useEffect","columns","renderCell","records","columnIndex","rowIndex","className","columnName","text","onMouseEnter","headerNames","headerElements","header","filterButton","buttons","sortElement","sortButton","name","handleSortClick","activeButton","element","getSortButton","filterElement","defaultInput","defaultButton","isActiveButton","input","getFilterButton","event","target","value","toString","display","flexDirection","zIndex","width","length","justifyContent","renderHeaders","rowHeight","columnCount","columnWidth","height","itemData","rowCount","connect","subjectList","dispatch","get","bindActionCreators","App","virtualizedList","createRootReducer","combineReducers","rootSaga","all","sagaMiddleware","createSagaMiddleware","middlewares","logger","rootReducerWithRouter","store","compose","applyMiddleware","createStore","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0d3d7a7.chunk.js","sourcesContent":["\r\nexport const SELECT_TABLE_ROW = \"SELECT_TABLE_ROW\" as const\r\nexport const SORT_DIRECTION_CHANGED = \"SORT_DIRECTION_CHANGED\" as const\r\nexport const FILTER_NAME_CHANGED = \"FILTER_NAME_CHANGED\" as const\r\nexport const FILTER_VALUE_CHANGED = \"FILTER_VALUE_CHANGED\" as const\r\nexport const GET_LIST = \"GET_LIST\" as const\r\nexport const SET_HEADERS = \"SET_HEADERS\" as const","\r\nimport { injectable } from 'inversify';\r\nimport { Column, SortDirection } from 'typings';\r\nimport { ActionTypePayload, FilterNamePayload, FilterValuePayload, SortPayload } from 'typings/payloads';\r\nimport { FILTER_NAME_CHANGED, FILTER_VALUE_CHANGED, GET_LIST, SET_HEADERS, SORT_DIRECTION_CHANGED } from '../../Store/actionNames';\r\n\r\n\r\n@injectable()\r\nexport class VirtualizedTableAction {\r\n    public getList = (): ActionTypePayload<any, any> => ({\r\n        type: GET_LIST,\r\n        payload: {\r\n        }\r\n    })\r\n\r\n    public setHeaders = (headers: Column[]): ActionTypePayload<any, any> => ({\r\n        type: SET_HEADERS,\r\n        payload: {\r\n            headers\r\n        }\r\n    })\r\n\r\n    public sortDirectionChanged = (sortField: string, sortDirection: SortDirection): ActionTypePayload<SortPayload, any> => ({\r\n        type: SORT_DIRECTION_CHANGED,\r\n        payload: {\r\n            sortField, sortDirection\r\n        }\r\n    })\r\n\r\n    public filterNameChanged = (filterName: string | undefined): ActionTypePayload<FilterNamePayload, any> => ({\r\n        type: FILTER_NAME_CHANGED,\r\n        payload: {\r\n            filterName\r\n        }\r\n    })\r\n\r\n    public filterValueChanged = (filterValue: string | undefined): ActionTypePayload<FilterValuePayload, any> => ({\r\n        type: FILTER_VALUE_CHANGED,\r\n        payload: {\r\n            filterValue\r\n        }\r\n    })\r\n\r\n\r\n    \r\n}","import { VirtualizedTableReduxProps } from \"./VirtualizedTable\";\r\n\r\nexport const VirtualizedTablePropsInitial: VirtualizedTableReduxProps = {\r\n    filterName: undefined,\r\n    filterValue: undefined,\r\n    sortBy: 'id',\r\n    sortDir: 'desc',\r\n    headers: [],\r\n    data: [],\r\n    originalData: []\r\n};\r\n","import { injectable } from 'inversify';\r\nimport { range } from 'shared/utils';\r\nimport { ActionTypePayload, FilterNamePayload, FilterValuePayload, SortPayload } from 'typings/payloads';\r\nimport { FILTER_NAME_CHANGED, FILTER_VALUE_CHANGED, GET_LIST, SET_HEADERS, SORT_DIRECTION_CHANGED } from '../../Store/actionNames';\r\nimport { Subject, VirtualizedTableReduxProps } from './VirtualizedTable';\r\nimport { VirtualizedTablePropsInitial } from './VirtualizedTableProps';\r\n\r\n@injectable()\r\nexport class VirtualizedTableReducer {\r\n    public reduce(state: VirtualizedTableReduxProps = VirtualizedTablePropsInitial, action: any): any {        \r\n        switch (action.type) {\r\n            case GET_LIST:\r\n                return this.getList(state, action.payload)\r\n            case SET_HEADERS:\r\n                return this.setHeader(state, action.payload)\r\n            case SORT_DIRECTION_CHANGED:\r\n                return this.sortDirectionChanged(state, action.payload)\r\n            case FILTER_NAME_CHANGED:\r\n                return this.filterNameChanged(state, action.payload)\r\n            case FILTER_VALUE_CHANGED:\r\n                return this.filterValueChanged(state, action.payload)\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n\r\n    public getReducer = (): (state: VirtualizedTableReduxProps, action: ActionTypePayload<any, any>) => VirtualizedTableReduxProps => {\r\n        return (state: VirtualizedTableReduxProps, action: ActionTypePayload<any, any>): VirtualizedTableReduxProps =>\r\n            this.reduce(state, action);\r\n    }\r\n\r\n    protected getList(state: VirtualizedTableReduxProps, payload: any): VirtualizedTableReduxProps {\r\n        const newState = {...state};\r\n\r\n        const list = range(50000).map((el, i) => ({\r\n            id: i,\r\n            data1: `data1 ${i}`,\r\n            data2: `data2 ${i}`,\r\n            data3: `data3 ${i}`,\r\n            data4: `data4 ${i}`,\r\n        }));\r\n\r\n        newState.data = list\r\n        newState.originalData = list\r\n\r\n        return newState;\r\n    }\r\n\r\n\r\n    protected setHeader(state: VirtualizedTableReduxProps, payload: any): VirtualizedTableReduxProps {\r\n        const newState = {...state};\r\n\r\n        newState.headers = payload.headers;\r\n\r\n        return newState;\r\n    }\r\n\r\n\r\n    protected filterValueChanged(state: VirtualizedTableReduxProps, payload: FilterValuePayload): VirtualizedTableReduxProps {\r\n        const newState = {...state};\r\n\r\n        newState.filterValue = payload.filterValue\r\n\r\n        const {filterName, filterValue} = newState\r\n\r\n        if (filterName === undefined || filterValue === undefined) {\r\n            newState.data = newState.originalData;\r\n            return newState\r\n        }\r\n\r\n        try {\r\n            newState.data = newState.originalData.filter(el => el[filterName].match(new RegExp(filterValue)));\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n          \r\n        return newState;\r\n    }\r\n\r\n    protected filterNameChanged(state: VirtualizedTableReduxProps, payload: FilterNamePayload): VirtualizedTableReduxProps {\r\n        const newState = {...state};\r\n\r\n        newState.filterName = payload.filterName  \r\n        newState.filterValue = undefined        \r\n\r\n        return newState;\r\n    }\r\n\r\n    protected sortDirectionChanged(state: VirtualizedTableReduxProps, payload: SortPayload): VirtualizedTableReduxProps {\r\n        const newState = {...state};\r\n\r\n        newState.sortBy = payload.sortField\r\n        newState.sortDir = payload.sortDirection\r\n\r\n        const sortableData = [...newState.data].sort(( a: Subject, b: Subject ) => { \r\n            const parsedA = Number.parseInt(a[newState.sortBy])\r\n            const parsedB = Number.parseInt(b[newState.sortBy])\r\n\r\n            if (isNaN(parsedA) && isNaN(parsedB)) {\r\n                return a[newState.sortBy].localeCompare(b[newState.sortBy]) \r\n            } else {\r\n                return parsedA - parsedB\r\n            }\r\n        })\r\n \r\n\r\n        if (payload.sortDirection === 'desc') {\r\n            newState.data = sortableData;\r\n        } else {\r\n            newState.data = sortableData.reverse()\r\n        }\r\n\r\n        return newState;\r\n    }\r\n\r\n}\r\n","import { SortDirection } from \"typings\";\r\n\r\nexport const range = (count: number) => [...Array(count).keys()];\r\n\r\nexport const reverseDirection = (direction: SortDirection): SortDirection => direction === 'desc' ? 'asc' : 'desc'","export const SERVICE_IDENTIFIER = {\r\n    VirtualizedTableAction: Symbol.for('VirtualizedTableAction'),\r\n    VirtualizedTableReducer: Symbol.for('VirtualizedTableReducer')\r\n};","import { Container } from 'inversify';\r\nimport 'reflect-metadata';\r\nimport { VirtualizedTableAction } from '../Components/VirtualizedTable/VirtualizedTableAction';\r\nimport { VirtualizedTableReducer } from '../Components/VirtualizedTable/VirtualizedTableReducer';\r\n\r\nimport { SERVICE_IDENTIFIER } from './inversifyTypes';\r\n\r\nexport const container = new Container();\r\ncontainer.bind(SERVICE_IDENTIFIER.VirtualizedTableAction).to(VirtualizedTableAction).inSingletonScope();\r\ncontainer.bind(SERVICE_IDENTIFIER.VirtualizedTableReducer).to(VirtualizedTableReducer).inSingletonScope();\r\n\r\n","import { IconButton, Input } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport React from 'react';\r\n\r\nexport interface InputFieldProps {\r\n    onChange: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement>;\r\n    onClose: () => void;\r\n}\r\n\r\nexport const InputField = (props: InputFieldProps) => {\r\n    return (\r\n        <>\r\n            <Input style={{ marginLeft: 5}} onChange={props.onChange} />\r\n            <IconButton onClick={props.onClose}>\r\n                <CloseIcon />\r\n            </IconButton>\r\n        </>\r\n    );\r\n};\r\n","import IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport React, { MouseEventHandler } from 'react';\r\n\r\nexport interface SearchButtonProps {\r\n    onClick: MouseEventHandler;\r\n}\r\n\r\nexport const SearchButton = (props: SearchButtonProps): React.ReactElement => {   \r\n    return (\r\n        <IconButton onClick={props.onClick}>\r\n            <SearchIcon />\r\n        </IconButton>\r\n    );\r\n};\r\n","import { IconButton } from '@material-ui/core';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport React, { MouseEventHandler } from 'react';\r\nimport { SortDirection } from '../typings';\r\n\r\nexport interface SortButtonProps {\r\n    onClick: MouseEventHandler;\r\n    selected: boolean;\r\n    direction: SortDirection;\r\n}\r\n\r\nexport const SortButton = (props: SortButtonProps): React.ReactElement => {    \r\n    return (\r\n        <IconButton color={props.selected ? 'primary' : 'default'} onClick={props.onClick}>\r\n            {props.direction === 'desc' ? <ArrowDownwardIcon /> : <ArrowUpwardIcon />}\r\n        </IconButton>\r\n    );\r\n\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { FixedSizeGrid } from 'react-window';\r\nimport { reverseDirection } from 'shared/utils';\r\nimport { Column, FilterButton, HeadersBaseSettings, SortButton as SortButtonType, SortDirection } from '../../typings';\r\nimport { InputField } from '../InputField';\r\nimport { SearchButton } from '../SearchButton';\r\nimport { SortButton } from '../SortButton';\r\nimport './VirtualizedTable.css';\r\nimport { VirtualizedTableAction } from './VirtualizedTableAction';\r\n\r\nexport type VirtualizedTableProps = {\r\n    columns: Column[];\r\n    actions: VirtualizedTableAction;\r\n};\r\n\r\nexport type VirtualizedTableReduxProps = {\r\n    sortBy: string;\r\n    sortDir: SortDirection;\r\n    filterName: string | undefined;\r\n    filterValue: string | undefined;\r\n    headers: Column[];\r\n    data: Subject[];\r\n    originalData: Subject[]\r\n};\r\n\r\nexport type Subject = {\r\n    id: number\r\n    data1: string\r\n    data2: string\r\n    data3: string\r\n    data4: string\r\n}\r\n\r\nexport const VirtualizedTable = (props: VirtualizedTableProps & VirtualizedTableReduxProps) => {\r\n    const [hoveredRowIndex, setHoveredRowIndex] = useState(null);\r\n    const { actions } = props;\r\n    useEffect(() => {\r\n        actions.getList();\r\n    }, [actions]);\r\n\r\n    \r\n    const w = 200;\r\n\r\n    const getSortButton = (sortButton: SortButtonType | false | undefined, name: any, handleSortClick: () => void) => {\r\n        const activeButton = name === props.sortBy;\r\n\r\n        if (sortButton === false) {\r\n            return null;\r\n        }\r\n\r\n        if (sortButton === undefined) {\r\n            return (\r\n                <SortButton\r\n                    onClick={handleSortClick}\r\n                    selected={activeButton}\r\n                    direction={activeButton ? props.sortDir : 'desc'}\r\n                />\r\n            );\r\n        }\r\n\r\n        return sortButton.element(handleSortClick, activeButton, props.sortDir);\r\n    };\r\n\r\n    const getFilterButton = (\r\n        filterButton: FilterButton | false | undefined,\r\n        name: any,\r\n        onChange: (event: React.ChangeEvent<HTMLInputElement>) => void,\r\n        onClose: () => void,\r\n    ) => {\r\n        const defaultInput = <InputField onClose={onClose} onChange={onChange} />;\r\n        const defaultButton = <SearchButton onClick={() => actions.filterNameChanged(name as string)} />;\r\n        const isActiveButton = name === props.filterName;\r\n        if (filterButton === false) {\r\n            // если сказано, что false, то не рендерим компонент\r\n            return null;\r\n        }\r\n        if (filterButton === undefined) {\r\n            // если undefined(просто не инициализировано поле), то рендерим компонент по умолчанию\r\n            return isActiveButton ? defaultInput : defaultButton;\r\n        }\r\n\r\n        if (isActiveButton) {\r\n            // если любое из полей не передано, рендерим как дефолтное\r\n            return filterButton.input !== undefined ? filterButton.input(onChange, onClose) : defaultInput;\r\n        } else {\r\n            return filterButton.element !== undefined\r\n                ? filterButton.element(() => actions.filterNameChanged(name as string))\r\n                : defaultButton;\r\n        }\r\n    };\r\n\r\n    const renderHeaders = (headerNames: HeadersBaseSettings<any>): React.ReactNode => {\r\n        const headerElements = props.columns.map((header, i) => {\r\n            const filterButton = header.buttons?.filterButton;\r\n            const sortButton = header.buttons?.sortButton;\r\n\r\n            const handleSortClick = () => {\r\n                const sortDir = props.sortBy === header.text ? reverseDirection(props.sortDir) : 'asc' \r\n                actions.sortDirectionChanged(header.text, sortDir);\r\n            };\r\n\r\n            const handleFilterValueChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n                actions.filterValueChanged(event.target.value);\r\n            };\r\n\r\n            const onClose = () => {\r\n                actions.filterNameChanged(undefined);\r\n                actions.filterValueChanged(undefined);\r\n            };\r\n\r\n            const sortElement = getSortButton(sortButton, header.text, handleSortClick);\r\n            const filterElement = getFilterButton(filterButton, header.text, handleFilterValueChanged, onClose);\r\n\r\n            return (\r\n                <div\r\n                    key={header.text.toString()}\r\n                >\r\n                    {header.text}\r\n                    {filterElement}\r\n                    {sortElement}\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return <div style={{ display: 'flex', flexDirection: 'row',  zIndex: 1, width: w * headerElements.length, justifyContent: 'space-around' }}>{headerElements}</div>;\r\n    };\r\n\r\n    const renderCell = (columns: Column[], records: any[]) => ({ columnIndex, data, rowIndex, style }: any) => {\r\n        const { hoveredRowIndex, setHoveredRowIndex } = data;\r\n        const className = hoveredRowIndex === rowIndex ? 'CellHovered' : 'Cell';\r\n        const columnName = columns[columnIndex].text;\r\n\r\n        return (\r\n            <div className={className} onMouseEnter={() => setHoveredRowIndex(rowIndex)} style={style}>\r\n                {props.data[rowIndex][columnName]}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const renderBody = (columns: Column[], records: any[]): React.ReactNode => (\r\n        <FixedSizeGrid\r\n            style={{ zIndex: 0 }}\r\n            rowHeight={100}\r\n            columnCount={props.columns.length}\r\n            columnWidth={w}\r\n            height={800}\r\n            itemData={{ hoveredRowIndex, setHoveredRowIndex }}\r\n            rowCount={props.data.length}\r\n            width={1100}\r\n        >\r\n            {renderCell(columns, records)}\r\n        </FixedSizeGrid>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            {renderHeaders(props.columns as any)}\r\n            {renderBody(props.columns, props.data)}\r\n        </>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { AnyAction, bindActionCreators, Dispatch } from 'redux';\r\nimport { RootReducer } from 'Store/reducers';\r\nimport { container } from '../../inversify/inverisfyContainer';\r\nimport { SERVICE_IDENTIFIER } from '../../inversify/inversifyTypes';\r\nimport { VirtualizedTable } from './VirtualizedTable';\r\nimport { VirtualizedTableAction } from './VirtualizedTableAction';\r\n\r\nfunction VirtualizedTableContainer(props: any) {\r\n    return <VirtualizedTable {...props} />;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<AnyAction>) {\r\n    const actions = container.get<VirtualizedTableAction>(SERVICE_IDENTIFIER.VirtualizedTableAction);\r\n    return {\r\n        dispatch,\r\n        actions: {\r\n            ...bindActionCreators(\r\n                {\r\n                    filterNameChanged: actions.filterNameChanged,\r\n                    filterValueChanged: actions.filterValueChanged,\r\n                    sortDirectionChanged: actions.sortDirectionChanged,\r\n                    setHeaders: actions.setHeaders,\r\n                    getList: actions.getList,\r\n                },\r\n                dispatch,\r\n            ),\r\n        },\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state: RootReducer) => {\r\n    return {\r\n        data: state.subjectList.data,\r\n        sortDir: state.subjectList.sortDir,\r\n        sortBy: state.subjectList.sortBy,\r\n        filterName: state.subjectList.filterName,\r\n        filterValue: state.subjectList.filterValue,\r\n        headers: state.subjectList.headers,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VirtualizedTableContainer);\r\n","import VirtualizedTableContainer from 'Components/VirtualizedTable/VirtualizedTableContainer';\r\nimport React from 'react';\r\nimport { Column } from './typings';\r\n\r\n\r\nfunction App() {\r\n    const columns: Column[] = [\r\n        { text: 'id' },\r\n        { text: 'data1' },\r\n        { text: 'data2' },\r\n        { text: 'data3' },\r\n        { text: 'data4' },\r\n    ];\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <VirtualizedTableContainer columns={columns} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { VirtualizedTableReduxProps } from 'Components/VirtualizedTable/VirtualizedTable';\r\nimport { VirtualizedTableReducer } from 'Components/VirtualizedTable/VirtualizedTableReducer';\r\nimport { container } from 'inversify/inverisfyContainer';\r\nimport { SERVICE_IDENTIFIER } from 'inversify/inversifyTypes';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst virtualizedList = container.get<VirtualizedTableReducer>(SERVICE_IDENTIFIER.VirtualizedTableReducer)\r\n\r\nexport type RootReducer = {\r\n    subjectList: VirtualizedTableReduxProps\r\n}\r\n\r\nconst createRootReducer = () => combineReducers({\r\n    subjectList: virtualizedList.getReducer()\r\n});\r\n\r\n\r\nexport default createRootReducer\r\n","import { all } from \"redux-saga/effects\";\r\n\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n\r\n    ])\r\n}\r\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport createRootReducer from \"./reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"./sagas\";\r\n\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nconst middlewares = [logger, sagaMiddleware ];\r\n\r\n\r\nconst rootReducerWithRouter = createRootReducer()\r\nexport type RootStore = ReturnType<typeof rootReducerWithRouter>\r\n\r\nexport const store = compose(applyMiddleware(...middlewares))(createStore)(rootReducerWithRouter);\r\n\r\n\r\nsagaMiddleware.run(rootSaga)\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport {store} from \"./Store\";\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}